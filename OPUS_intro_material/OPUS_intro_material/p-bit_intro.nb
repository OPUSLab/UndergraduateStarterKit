(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    142717,       3029]
NotebookOptionsPosition[    140339,       2981]
NotebookOutlinePosition[    140740,       2997]
CellTagsIndexPosition[    140697,       2994]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["A single p-bit", "Chapter"]], "Subtitle",
 CellChangeTimes->{{3.932663763260399*^9, 3.932663767136142*^9}, {
  3.932664760183868*^9, 3.932664832581506*^9}, {3.9326674813640165`*^9, 
  3.932667483676965*^9}, {3.9327484230874248`*^9, 3.932748427924953*^9}, {
  3.9327485051259203`*^9, 
  3.9327485136228437`*^9}},ExpressionUUID->"564ff5f5-2e0e-44b8-9a55-\
5335e1abaf03"],

Cell["\<\
The sigmoid plot shows a single p-bit\[CloseCurlyQuote]s probability of being \
in a \[OpenCurlyQuote]+1\[CloseCurlyQuote] state as a function of the input \
I_i and the temperature T.\
\>", "Text",
 CellChangeTimes->{{3.932748519607173*^9, 
  3.932748559017008*^9}},ExpressionUUID->"3b48b1a3-5c36-4c8b-9019-\
772944d49d5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Define", " ", "the", " ", "p"}], "-", 
    RowBox[{"bit", " ", "probability", " ", "function"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"Ii_", ",", "T_"}], "]"}], ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "Ii"}], "/", "T"}], "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "function", " ", "for", " ", "four", " ", 
     "different", " ", "values", " ", "of", " ", "T"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"Ii", ",", "0.5"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"Ii", ",", "1"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"Ii", ",", "2"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"Ii", ",", "10"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Ii", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<T = 0.5\>\"", ",", "\"\<T = 1\>\"", ",", "\"\<T = 2\>\"", ",", 
          "\"\<T = 10\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<I_i\>\"", ",", "\"\<P(s_i = 1)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Dotted", ",", "DotDashed"}], 
       "}"}]}], ",", 
     RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9326634838818426`*^9, 3.9326634838818426`*^9}, 
   3.932663515930711*^9, {3.932663629514332*^9, 3.93266370516401*^9}, {
   3.93266374668172*^9, 3.9326637493072243`*^9}, {3.9326638892268963`*^9, 
   3.9326639099769077`*^9}, {3.932667645073418*^9, 3.932667662619935*^9}, 
   3.9326677662955356`*^9, {3.9326819223020144`*^9, 3.9326819701542177`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"db05ab8a-1249-4f51-988e-e556d5b625f7"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$12065#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
8P//X4Kyfm5u/Z//D7Z+qtI=
         "]]},
       Annotation[#, "Charting`Private`Tag$12065#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1:eJwt13k0lev3APCTCCWZj3OczvSWosjQzRXaDyoSRUWTEpUKqZDcuKZrTsiY
KXNIIZWpwVNmihIaqESkdN7XkKLJ9/zW+v3xrL0+a6+99l57//XwnE7tOCpC
o9Hahe//4r8frSbn5gjMqsh6/e2EL4z4Kk33/SLwvYW+hw8F+MI2mXffq2YJ
XCHdGvE60Re4+qd/n5oi8KqqjD4a9oVHUfESAyME1rbeIUGn+4GE5gs2fkLg
hPcdHV4tfpDodWhrYDqBp2kziTv+9oeSeZ75ND0C29pWyXcUBsLfO68tSNUl
cIGm2MOhO4HQlP/+uLYWgXs8LTaINQTCgJm1hpMagX+OVHe6DgSCUoxGZb0K
gdtXthxqYQRBMHO0OYxG4GdSwZ+bY4Jgj+6BMak2Pt7gKFe5IjgYxI6a6TAO
8PFgryn7QVwIdB3U3j22l4+fbbpfM5kdAlf2qPjdtxM6bWJG92YIrLOkGh2t
+djGTDOy/1kIOOum7L1myseTAT9ozfKh0DLvY6CBOh+bBe8alkwLhegrYZ0H
vvPwnq7S6ovlYSD/stEt9xIP33SvbHkhHgl4VU5ESAwPrz5kLUaoRIJbgF++
8wUeLpZ6MOGnGQlNqrr96qE87HO/TOyAbSScP5u99ZYPD08feWHZmRcJg3K+
6g0OPJzyYEAizDQKKqy0Roc1eHiJqfGeCzEXYEd92mG1Ni5mh9k8jrCNgWXd
H942N3GxYFYvt8c9Br590NznXM/FkXQHpBcRA6kL6q3z7nGxM5FL178bAwNb
xoyWlnHx2dklovr8WDj51EBZNpGLHfivLv79NRYi3vQ/njnAxcM5fxx3d8eB
L2XkFjfEwRJpG1MrSuIhw1FvFL3hYL0/K25r1MbDvedaRyZ6OXjn4ojuWy3x
8KeKsN/RxsEeUfM3vx+Oh+BASUuFmxzMXvqr4yE3AaJke1Zd9ufgOwy3vOzL
CZCm6zaWxeDgEw709iWXEqH6XJpL2XY2vt5nCGlXk4F/5EzBS3M2Dn7d7Xip
JhkuWpsPzDNhY7UfCyUvP04GJ7VvtrvWsvFjrSrF7slkWNRnYzyrzMakVKmf
BEqBgxsklU0Hl+JFoT3GJ9+kwHwxn8Zer6W4aZg87b8sFbbF23L/pLJwbJW9
U9pIOpzXWbLFLIGFU1461rj8ToerXS1n4qJZWMdgq7aVQgb8kTOs5wewcF0r
rdbcJANuJPCdzY6wcGvk3usqWRkglUSVxGmycFFWIsvIPhPaUiL1iHoVXH2i
Sv/phytglnl/m/kXJt4zfr5Yh5ED4xf7f4mOMPGPbON7K1RzIM3/57WH75j4
RZfDFlXdHPjioC9u8JyJP+pu/wJWORDPv1OnUcvEwwE+kiNBOfC28LqWfAQT
p268Yj1fkAPeFelybwkmXu+VvbW8LReuNv/T67mfgVduDE61KciHVB1v0+Jd
DDwbWiWmXpkP0Zke5W+tGLjoYl36kuZ88PB0jdqCGLgnpcBF5FM+GHEObOAs
Z+BT0mfTwjUKoNsbXW0jlXGSPSdCuaYARFTFvXnByniXeGZPyuurcDAkUbGz
iI5rZRZnrttSDB3wTdwnl47PSPRzLeyLAX7u/sHNoGOT23vNXU8VA9dD5Z1H
LB231/bl9yYVw6BDbpGSNx0LapeF7RgqBmeDcoODpnRs028SPhJ4Ddwn2x0F
b5SwdfcarftNJeB/aH7pInklvDvulyU7oBRoGpw601AFfGIK5WWaV8DrC6nh
JT1yWNy/ZMxVtxJYC48XfzWRxR7FF6bOh9WC61/qYn2sJXgW8/YMi2I4rPe2
qL5+ET7Sa62/Tase1H3Wz7nnS+DH9hFBopebIOfNzoZ/jMXwLkZl4eSTNvgY
pGhopiyCL+23iJYx6ITapJWbRu1+1xX53XTYYNYFWp9efV2T+a3OwyxGbvmy
HthY2yf52268rt1U1aWd9hJOF5fNyMoP1f1KI320NvaBnTOR0+XXWrf6rNWv
iONvofnxqyjdnS1wYcBfzevRAKzXeFhhnTIE8/Oag2XcB0HEW7H/CGMcpnpo
P1QnhkBcyjrIifwGsdOaU30Bw/DfQK+pR95vGMi+lfJtbATK08Os/SfnIeZQ
g8CEGIVTuUdkPtiJoZNOlq9Sdn6Cgy5pS8ODJNAoz/HLs+2fIdLGW183YxHq
nSXXdqiNgahC0kjAD2kktyavYv33MXjRHjoeskQWbX82enso/QvY+jqtS6uX
Q8a/qruf6wrAbdEYv2OfAnKj9snHlghg7J9a0UWOCqgn4HiV0Q0BuIxGjpgd
U0CuqzsNx0oFcKxx5bWHngoou0eJNKkQgFOAs/adaAU02xP380O1APZOvYeM
BwromHHLlq+NAtjc99Leha+INu0KHTV9JwBOSVPygs+KaDr4ul2LNAm7sqpr
2sYV0easV407ZEiISrjWH/NdEcXU/y3TL0vCV98YPl1MCc1SHvpjCiS0WdqV
ruAqoQAsM/mTSYI3OdxobqeEmiYHMz6qkvBEW2w66pESajv2V9cXIxJ8q013
LkmnoxXD9PSe4yTo2D8dd8iho4UFH9MXuJDwec4+pryQjvp0OA3rXEnYZ+bd
anObjvyyhqMTT5KwvrcIEp/Q0UPtXOnNHiTMTC1ezaApo8sm182DfIX917wU
JY4qo3PrjuvbXyTh9FW3ynVrGOhBLMsel5LwtlMlSXodA0kZmV7oLiPBarbN
c8SQgfQHBt9/LCdB3VJNO9mCgd5d/ioudYuEDxPDJdNHhXn/ZeYWVSTsNnLI
uZ3BQDFaNUuz6kjY0G0TrbOQibhq5WtLO0mQEtFz0hxmIq1TI9VBAhJqzs3f
OTLGRKsPWWkeIklwFnSaXplkouLL2dNGFAn45fHl0jQV1Goo6vd9nATPsrRR
AVMFebqfP+v0lYTX9n/cb1iroH+af4cr/yShqKrRd/U9FWSQPhssIUHBppO7
ktQTWKhavDlDlkuBV/xd2qlUFvoTPzN3V+j8Kr7brSwWKnhODB/lUSAiMmFi
eJ2FRhWa1lXzKcDJF8etGlmo06uBtns5Betx09Yz31lIpXWn77/qFGjK64tU
71+KvNTOHDi9lgLlmqWnNi1jo6BIdsPcZgr+HC5UkV3FRtULwjmpZhR8kNZu
6ddmo7WOtX+0zSkoP7KR5wVsNM+fZuG0hQIzGdfnufvYaH+hJ/v+Vgq8j1Xr
0S6xUaDghKy9NQU9ijtpd3+z0bWqnwXGeymI94i4pPWCg/QTjMgHJyj48fh6
dcQbDorwja/VdaHAacWzdwNDHDTj9FijSGjdfobmpXGhvb5KxrlS8DnXdnhG
lIuezWpl7z9JQbTUx6C9bC6yPFnoN3iago53kneZNlwkX8EsKz9HwY6w7RqZ
lVyU/22/kX0IBVf3jm+pqeGizAnpplqhZ1dfcu65x0VqrERxRigF2c+7shbX
c9GK/z7c6RZawLWT8+/kIvK8SaN5OAURd+2/HxzlIukThX1EFAUPxk885DJ5
yCWlYFNhLAXq+0Ns8//lIeVRMlGQSsHeM5VyokE8pDds7GOSJqwPH+08HMJD
XelvFVOEHr5laUFc4KFzat2BkC7sL6UIuZd56IZRncrFDAoUHxSszL7FQ9dk
I5JUsiig8Zp/pn/iISc/aRnxfAp6RyRzE2z5iGvYtJu4QUHTrsiMmj18NOdu
0nFY6MpHEinv9vPR4l6mfL7QyVfEo1c58ZHq4FmJZaUU2NqJede789HUuZEC
XhkF3Y00i6lwPnrKHWmXv0lBV/73iR21fNSzKgt33xbu12nYWI5DoFXXDvU9
vUvBe9HCmSQ+gQQjBepS9yj4evV4GUOVQBeXPdpsJjRjbIzF0yBQnrjGyD2h
j3hOfl9jQKAyz+CmgvvC+/83d8NqN4HYcid03OsoUC1gMCNjCYQ+z716/YgC
fbO+p1IJBGrdHq8oU0+B5aeM8LhkApX8tZzYJPQZDe50SiaBkr6N3i4V+t4d
1adXSwi08vTKqoAG4f2bdMMamgkU08nZw2ii4OjxaUPzdgJ5VT1p3Cq0z8Kq
qfYOAn0JeyfuL3TmtvWOz3sIJH2qXnJQ6NFeZDg4RKDy8iSJombhvD4iU0c/
Esjmh9vSV0IvVmko/vSZQH+t6xBf2EKBjoMZfWKCQG4WdQdchd40T7LDa5pA
OetTWtOF3pPXFjIzQyBZq8hFj4V22RRt4PeLQHzTGuKX0P//P0GZ2EJudSsF
/wMnSB4g
         "]]},
       Annotation[#, "Charting`Private`Tag$12065#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{0, Small, Small, Small}], 
        LineBox[CompressedData["
1:eJwtlGs01GkcgJk15VJLRKYdBm+czZ6JzEYUv3doIpvJJZcthKGc1kayIRTH
rdvZUFMZxp5kZ7VT6dQWqjX/ja0ks4aMmGLu/6Q2lEhkd8/ZD895vj6fHsek
9PAUioGBQci//OcCMmRyYQERVnWT9ChPGejzbKYUc4jQ39lDDV0vA67FyHTz
B0Tosk5ZBvvIwME7Yz79LSImW14L/PxkcO94lbFSj4igIBFv9WYZGK8ZsCe6
EcHLMOmjRsngTFbCN4U1iDAp3E0b+kEGYsMDDQZeiFh0R9n25qYMqCmBHrQ4
J8J/Q5ivzL8XrJ7+mVZf6UhQIrITbz7shfB2AW/1IwditO5kF4PbB3lvfNMq
NAyiUGtl4aHqg5Zswd6mbfbEXHqI3fm0J8CtinT4VE0n6jMWc15R+yFQ+Ds3
6NVKoqTmaH1jXT+IHuTKD+ykEQ6CsFojNznEl5yx/qtxBbFYEz9Z2i2Hwwmf
XTWzsiFCKTa2bN4AGDAZkoDS5UTPxPmvq6cHYOhEdbm435KQSF/XrhU8Bbpp
6qV3/suIaJZ8KIY1CN+tc6Uq6OYEKs6XSYcGgec13Njebka0Vsz2nCgcAtcc
n4V9DcYE+3qHiQddAReeR3TksqlExS7vKfP7CiCLrDcG2lIIga3w29yUZ3Cb
/yXnRdS8JNHgMWFo9RzcRwffuQnfSzbdzllk1vYcNt1WmMxHjUsaxcXZFvHD
kHGpaWaZlUbCEfFZY2YjELUbXejN75Rc03ay918dgQePB4+zIh6CxObF+jEX
Jfgw/7geek4DrCbFp+gCJVAOWj9Lpo1DbI1Hoq5bCYuXhBYl/f0eDs3WVxo5
q6BYKQ/IvDgPKs+hk8GHVHCtpiz08KQhZo/sYx3tVEF6fbKFNoqK/VKqRJYM
NcTvFdiVFxljyKQ5H96nhmNhB71ZtWY4RlH5UX1HDUbL+fojs59j02ZtwhZz
DQx0lY6XmC/Dod0Hzx2J1UBkXpKnoN0S718t5eU1aSDNbMxJumM55vEFe3zn
NMAQ3z+76KU1Vu1Qb7u3WQt5LQER5jUrsHt2G635rBYyRGm3PN1oeN2Wxqwc
pRaWULyS1uhWYsllcdhuNx1wvt/Odz1Nx+EF2Zn9eTqwbbVL56yyx8O/ksdc
7umgKvNopfsAA1cbcF2DluohvGwbU3jLARd1Jn8VE64H150lkQ0FjrjVx0tv
yNeDXG9SfzrSCbNWDb9xeqYHaZKObclAOE7v7hprR4LK6JcZvhPCvtMNT/Pt
SXgnSm2iuSCc1lCeIWSQQBsbozsyET5VXRk77EhC8oHJabcNCNf8WOq8y4WE
2eKFKyHRCF8ZiMuNdSPB5WfaymOnEL7RX0LfzCbBO1DRs+Q0wtvb4qd4/iRs
Ha0trziL8EduenNRAAn7mQ5T54QIIzFz+i6HhLs3XXpEYoTVMePJHsEkhN9n
lXU8QNjPlDZjG0FCSurUxqAuhKnBfN667STkmDa/7ZIifPUKsyUskgQh1yex
rx/h4sTL9OPRJLyQ441qDcI6r996P+z8tzeH8jaFRDh3q7bMOo6EpV90XBp9
ifDoT2jV2ngSPHYFrpiYQBhf7KSlJpDAMTSRZk0hXOjMzCxOJCHm4qOSmRmE
w05U36hLImEv5+SG/DmEg/DS4VYeCf//C09fK5t4kkzCPwU/TGw=
         "]]},
       Annotation[#, "Charting`Private`Tag$12065#4"]& ]}, {}}, InsetBox[
     TemplateBox[{"\"T = 0.5\"", "\"T = 1\"", "\"T = 2\"", "\"T = 10\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.3}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["\"I_i\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"P(s_i = 1)\"", HoldForm], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-9.999999591836735, 9.999999591836735}, {0., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag$12065#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
8P//X4Kyfm5u/Z//D7Z+qtI=
           "]]}, "Charting`Private`Tag$12065#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{0, Small}]], 
          Line[CompressedData["
1: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
/wMnSB4g
           "]]}, "Charting`Private`Tag$12065#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{0, Small, Small, Small}]], 
          Line[CompressedData["
1:eJwtlGs01GkcgJk15VJLRKYdBm+czZ6JzEYUv3doIpvJJZcthKGc1kayIRTH
rdvZUFMZxp5kZ7VT6dQWqjX/ja0ks4aMmGLu/6Q2lEhkd8/ZD895vj6fHsek
9PAUioGBQci//OcCMmRyYQERVnWT9ChPGejzbKYUc4jQ39lDDV0vA67FyHTz
B0Tosk5ZBvvIwME7Yz79LSImW14L/PxkcO94lbFSj4igIBFv9WYZGK8ZsCe6
EcHLMOmjRsngTFbCN4U1iDAp3E0b+kEGYsMDDQZeiFh0R9n25qYMqCmBHrQ4
J8J/Q5ivzL8XrJ7+mVZf6UhQIrITbz7shfB2AW/1IwditO5kF4PbB3lvfNMq
NAyiUGtl4aHqg5Zswd6mbfbEXHqI3fm0J8CtinT4VE0n6jMWc15R+yFQ+Ds3
6NVKoqTmaH1jXT+IHuTKD+ykEQ6CsFojNznEl5yx/qtxBbFYEz9Z2i2Hwwmf
XTWzsiFCKTa2bN4AGDAZkoDS5UTPxPmvq6cHYOhEdbm435KQSF/XrhU8Bbpp
6qV3/suIaJZ8KIY1CN+tc6Uq6OYEKs6XSYcGgec13Njebka0Vsz2nCgcAtcc
n4V9DcYE+3qHiQddAReeR3TksqlExS7vKfP7CiCLrDcG2lIIga3w29yUZ3Cb
/yXnRdS8JNHgMWFo9RzcRwffuQnfSzbdzllk1vYcNt1WmMxHjUsaxcXZFvHD
kHGpaWaZlUbCEfFZY2YjELUbXejN75Rc03ay918dgQePB4+zIh6CxObF+jEX
Jfgw/7geek4DrCbFp+gCJVAOWj9Lpo1DbI1Hoq5bCYuXhBYl/f0eDs3WVxo5
q6BYKQ/IvDgPKs+hk8GHVHCtpiz08KQhZo/sYx3tVEF6fbKFNoqK/VKqRJYM
NcTvFdiVFxljyKQ5H96nhmNhB71ZtWY4RlH5UX1HDUbL+fojs59j02ZtwhZz
DQx0lY6XmC/Dod0Hzx2J1UBkXpKnoN0S718t5eU1aSDNbMxJumM55vEFe3zn
NMAQ3z+76KU1Vu1Qb7u3WQt5LQER5jUrsHt2G635rBYyRGm3PN1oeN2Wxqwc
pRaWULyS1uhWYsllcdhuNx1wvt/Odz1Nx+EF2Zn9eTqwbbVL56yyx8O/ksdc
7umgKvNopfsAA1cbcF2DluohvGwbU3jLARd1Jn8VE64H150lkQ0FjrjVx0tv
yNeDXG9SfzrSCbNWDb9xeqYHaZKObclAOE7v7hprR4LK6JcZvhPCvtMNT/Pt
SXgnSm2iuSCc1lCeIWSQQBsbozsyET5VXRk77EhC8oHJabcNCNf8WOq8y4WE
2eKFKyHRCF8ZiMuNdSPB5WfaymOnEL7RX0LfzCbBO1DRs+Q0wtvb4qd4/iRs
Ha0trziL8EduenNRAAn7mQ5T54QIIzFz+i6HhLs3XXpEYoTVMePJHsEkhN9n
lXU8QNjPlDZjG0FCSurUxqAuhKnBfN667STkmDa/7ZIifPUKsyUskgQh1yex
rx/h4sTL9OPRJLyQ441qDcI6r996P+z8tzeH8jaFRDh3q7bMOo6EpV90XBp9
ifDoT2jV2ngSPHYFrpiYQBhf7KSlJpDAMTSRZk0hXOjMzCxOJCHm4qOSmRmE
w05U36hLImEv5+SG/DmEg/DS4VYeCf//C09fK5t4kkzCPwU/TGw=
           "]]}, "Charting`Private`Tag$12065#4"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {
        HoldForm["I_i"], 
        HoldForm["P(s_i = 1)"]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-9.999999591836735, 9.999999591836735}, {0., 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small, Small, Small}]]}, {
       "T = 0.5", "T = 1", "T = 2", "T = 10"}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {0.8, 0.3}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.9327537115379095`*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"05a0f5e9-9c32-47c2-84da-d14be8cde476"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Coupling 2 p-bits together", "Chapter"]], "Subtitle",
 CellChangeTimes->{{3.932664862815943*^9, 
  3.932664879802024*^9}},ExpressionUUID->"8b962ab3-377f-47da-aea4-\
042f086ed2f5"],

Cell["\<\
This graph visually shows 2 p-bits coupled together by some weight J_12. Each \
bit is in a +1 or -1 state at any given time.\
\>", "Text",
 CellChangeTimes->{{3.932748568501383*^9, 
  3.9327485968319597`*^9}},ExpressionUUID->"d9ae09cb-64b9-4c4c-b573-\
8a3431d6d45e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "1"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Define", " ", "an", " ", "undirected", " ", "edge", " ", "between", 
        " ", "node", " ", "1", " ", "and", " ", "node", " ", "2"}], "*)"}], 
      RowBox[{"VertexLabels", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "->", "\"\<p-bit 1\>\""}], ",", 
         RowBox[{"2", "->", "\"\<p-bit 2\>\""}]}], "}"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"Label", " ", "the", " ", "vertices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"VertexSize", "->", "0.05"}], ",", "\[IndentingNewLine]", 
      RowBox[{"EdgeLabels", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[UndirectedEdge]", "2"}], "->", "\"\<J_12\>\""}], 
        "}"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Label", " ", "the", " ", "coupling", " ", "strength"}], "*)"}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Display", " ", "the", " ", "graph"}], 
   "*)"}]}], "\n", "g", "\n"}], "Input",
 CellChangeTimes->{{3.9327443859355187`*^9, 3.9327443859355187`*^9}, 
   3.9327444244547205`*^9, {3.932744464740116*^9, 3.9327445036479387`*^9}, 
   3.9327446445437675`*^9, {3.9327446781803026`*^9, 3.9327447743393154`*^9}, {
   3.9327448352124023`*^9, 3.932744863567902*^9}, {3.932744917538142*^9, 
   3.9327449311275206`*^9}, {3.9327449971109943`*^9, 
   3.9327450102846785`*^9}, {3.9327450468857603`*^9, 
   3.9327451048562727`*^9}, {3.932745142293666*^9, 3.932745324284342*^9}, {
   3.9327453671132536`*^9, 3.932745379922966*^9}, {3.932745493386153*^9, 
   3.9327454944954805`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"039fc2e8-4a4d-479f-8f42-80e1bfee6fa6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{2, 1}, {Null, {{1, 2}}}, {
      EdgeLabels -> {UndirectedEdge[1, 2] -> "J_12"}, 
       VertexLabels -> {2 -> "p-bit 2", 1 -> "p-bit 1"}, 
       VertexSize -> {0.05}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], ArrowBox[{{1., 0.}, {-1., 0.}}, 0.05]}, 
        InsetBox["\<\"J_12\"\>", {0., 0.}, ImageScaled[{0.5, 0.5}],
         BaseStyle->"Graphics"]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.05], 
         InsetBox["\<\"p-bit 2\"\>", Offset[{2, 2}, {1.05, 0.05}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.05], 
         InsetBox["\<\"p-bit 1\"\>", Offset[{2, 2}, {-0.95, 0.05}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.932753711584793*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"453e403e-7048-4a6b-98fc-5ab558d620a6"]
}, Open  ]],

Cell["\<\
This code simulates 2 p-bits connected by a weight J, with biases h1 and h2, \
at constant temperature T. The output is the frequency with which we measure \
each of 4 possible system states/spin configurations, represented as a \
probability.\
\>", "Text",
 CellChangeTimes->{{3.9327486209297686`*^9, 
  3.932748702358861*^9}},ExpressionUUID->"ae36bb0f-be3f-42a4-92c5-\
f7038eb251ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Parameters", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "You", " ", "can", " ", "and", " ", "should", " ", "play", " ", "with", 
      " ", "different", " ", "values", " ", "of", " ", "J", " ", "and", " ", 
      RowBox[{"T", ".", " ", "T"}], " ", "is", " ", "always"}], " ", ">", " ", 
     RowBox[{"0.", " ", "J", " ", "can", " ", "be", " ", "positive"}]}], ",", 
    " ", "negative", ",", " ", 
    RowBox[{
    "or", " ", "0", " ", "if", " ", "the", " ", "bits", " ", "are", " ", 
     "not", " ", "coupled", " ", "at", " ", 
     RowBox[{"all", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "If", " ", "the", " ", "coupling", " ", "between", " ", "the", " ", "2",
        " ", "p"}], "-", 
      RowBox[{"bits", " ", "is", " ", "positive"}]}], ",", " ", 
     RowBox[{
     "it", " ", "encourages", " ", "them", " ", "to", " ", "align", " ", "in",
       " ", "the", " ", "same", " ", "direction"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"h1", "=", "0"}], ";"}], "                    ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Bias", " ", "to", " ", "p"}], "-", 
     RowBox[{"bit", " ", "#1"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"h2", "=", "0"}], ";"}], "                    ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Bias", " ", "to", " ", "p"}], "-", 
     RowBox[{"bit", " ", "#2"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"T", "=", "1"}], ";"}], "                     ", 
   RowBox[{"(*", 
    RowBox[{"Absolute", " ", "temperature"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Energy", " ", "function", " ", "using", " ", "the", " ", "Ising", " ", 
      "model"}], ",", 
     RowBox[{
      RowBox[{
      "where", " ", "m", " ", "and", " ", "n", " ", "are", " ", "the", " ", 
       "states", " ", "of", " ", "the", " ", "two", " ", "p"}], "-", 
      "bits"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Energy", "[", 
     RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"J", " ", "m", " ", "n"}], "+", 
       RowBox[{"h1", " ", "m"}], "+", 
       RowBox[{"h2", " ", "n"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Activation", " ", "function", " ", "for", " ", "bipolar", " ", "p"}], 
     "-", 
     RowBox[{"bits", " ", "using", " ", "tanh"}], "-", 
     RowBox[{"based", " ", "expression"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"activation", "[", 
     RowBox[{"I_", ",", "T_"}], "]"}], ":=", 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"Tanh", "[", 
       RowBox[{"I", "/", "T"}], "]"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "-", "1"}], ")"}]}], 
     "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Initial", " ", "random", " ", "states", " ", "for", " ", "the", " ", 
      "two", " ", "p"}], "-", 
     RowBox[{"bits", " ", "using", " ", "bipolar", " ", "values"}], "+", 
     RowBox[{"1", " ", "or"}], "-", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "-", "1"}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "-", "1"}], "]"}]}], ";"}],
    "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Perform", " ", "Gibbs", " ", 
     RowBox[{"sampling", ":", 
      RowBox[{"take", " ", "10000", " ", "samples"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samples", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Last", "@", 
       RowBox[{"Reap", "@", 
        RowBox[{"Do", "[", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Update", " ", "p"}], "-", 
           RowBox[{
           "bit", " ", "#1", " ", "based", " ", "on", " ", "the", " ", 
            "current", " ", "state", " ", "of", " ", "p"}], "-", 
           RowBox[{"bit", " ", "#2"}]}], "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{"I1", "=", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Energy", "[", 
                RowBox[{"1", ",", "n"}], "]"}], "-", 
               RowBox[{"Energy", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "n"}], "]"}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"m", "=", 
            RowBox[{"activation", "[", 
             RowBox[{"I1", ",", "T"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Update", " ", "p"}], "-", 
             RowBox[{
             "bit", " ", "#2", " ", "based", " ", "on", " ", "the", " ", 
              "new", " ", "state", " ", "of", " ", "p"}], "-", 
             RowBox[{"bit", " ", "#1"}]}], "*)"}], 
           RowBox[{"I2", "=", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Energy", "[", 
                RowBox[{"m", ",", "1"}], "]"}], "-", 
               RowBox[{"Energy", "[", 
                RowBox[{"m", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"n", "=", 
            RowBox[{"activation", "[", 
             RowBox[{"I2", ",", "T"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Store", " ", "the", " ", "combined", " ", "state", " ", "as", 
             " ", "a", " ", "list", " ", 
             RowBox[{"{", 
              RowBox[{"m", ",", "n"}], "}"}]}], "*)"}], 
           RowBox[{"Sow", "[", 
            RowBox[{"{", 
             RowBox[{"m", ",", "n"}], "}"}], "]"}]}], ",", "10000"}], 
         "]"}]}]}]}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Map", " ", "the", " ", "states", " ", "to", " ", "their", " ", 
     "corresponding", " ", "labels"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labeledSamples", "=", 
     RowBox[{"samples", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], "->", "\"\<[-1,-1]\>\""}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "->", "\"\<[-1,1]\>\""}], 
        ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "->", "\"\<[1,-1]\>\""}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "->", "\"\<[1,1]\>\""}]}], 
       "}"}]}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Count", " ", "the", " ", "frequency", " ", "of", " ", "each", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"counts", "=", 
     RowBox[{"Tally", "[", "labeledSamples", "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Sort", " ", "by", " ", "the", " ", "label", " ", "to", " ", "ensure", 
     " ", "proper", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sortedCounts", "=", 
     RowBox[{"SortBy", "[", 
      RowBox[{"counts", ",", "First"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "the", " ", "labels", " ", "and", " ", "corresponding", 
     " ", "frequencies"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", "=", 
     RowBox[{"sortedCounts", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"frequencies", "=", 
     RowBox[{"sortedCounts", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Convert", " ", "frequencies", " ", "to", " ", "probabilities"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probabilities", "=", 
     RowBox[{
      RowBox[{"N", "[", "frequencies", "]"}], "/", 
      RowBox[{"Total", "[", "frequencies", "]"}]}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "a", " ", "bar", " ", "chart", " ", "with", " ", "labeled",
      " ", "bins"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{"probabilities", ",", 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"labels", ",", "Below"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<State\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9326826900971494`*^9, 3.9326826900971494`*^9}, 
   3.932683057219612*^9, 3.9326831441887455`*^9, 3.9326831807165556`*^9, 
   3.9326832490894985`*^9, 3.932683318479044*^9, {3.932683397867928*^9, 
   3.932683408570794*^9}, 3.9326834778769193`*^9, {3.9327435645155725`*^9, 
   3.9327435991116295`*^9}, {3.932745413454526*^9, 3.9327454320186357`*^9}, {
   3.9327457323766603`*^9, 3.9327457861040316`*^9}, {3.9327467874834986`*^9, 
   3.932746806702557*^9}, {3.9327487110630207`*^9, 3.9327487157348967`*^9}, {
   3.932753380969003*^9, 3.932753434138509*^9}, {3.9327534702456427`*^9, 
   3.9327534728237543`*^9}, 3.9327535107005634`*^9},
 CellLabel->
  "In[213]:=",ExpressionUUID->"93d7ed2b-749a-4c4e-9dfb-c46cc771e524"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.46790000000000004`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{58.20262955639584, 
            118.56376379997184`}, {-76.67357589645479, 103.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.46790000000000004`]& ,
         TagBoxNote->"0.46790000000000004"],
        StyleBox["0.46790000000000004`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.46790000000000004`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.008400000000000001}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{124.53784934366772`, 184.89898358724375`}, {
            99.36009916642398, 103.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.008400000000000001]& ,
         TagBoxNote->"0.008400000000000001"],
        StyleBox["0.008400000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.008400000000000001, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.0083}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{190.8730691309396, 251.23420337451563`}, {
            99.39840899777607, 103.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0083]& ,
         TagBoxNote->"0.0083"],
        StyleBox["0.0083`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0083, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.5154}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{257.20828891821145`, 
            317.5694231617875}, {-94.8707457887001, 103.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5154]& ,
         TagBoxNote->"0.5154"],
        StyleBox["0.5154`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5154, {}], "Tooltip"]& ]}}, {}, {}}, {}, {
    InsetBox["\<\"[-1,-1]\"\>", Offset[{0, -4}, {1., 0.}], 
     ImageScaled[{0.5, 1}]], 
    InsetBox["\<\"[-1,1]\"\>", Offset[{0, -4}, {2., 0.}], 
     ImageScaled[{0.5, 1}]], 
    InsetBox["\<\"[1,-1]\"\>", Offset[{0, -4}, {3., 0.}], 
     ImageScaled[{0.5, 1}]], 
    InsetBox["\<\"[1,1]\"\>", Offset[{0, -4}, {4., 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
      StyleBox[
       {Thickness[Tiny], InsetBox[
         TagBox["\<\"State\"\>",
          HoldForm], Offset[{10., 0.}, {4.451201747997087, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
         Automatic, {1, 0}]}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5487982520029133, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}], 
        LineBox[{{4.451201747997087, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"State\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Probability\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.932753711772293*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"f18e62ad-f749-4d84-84fd-1711c3757bac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A system of 4 p-bits", "Chapter",
 CellChangeTimes->{{3.9327487872406015`*^9, 
  3.932748791841074*^9}},ExpressionUUID->"2e42a6cc-d4e1-4efc-aaee-\
529e9c40ad89"],

Cell["\<\
The following code simulates a system of 4 p-bits. It outputs a histogram \
showing the frequency with which we measure each energy state, expressed as a \
probability.\
\>", "Text",
 CellChangeTimes->{{3.932748899626116*^9, 
  3.9327489488762927`*^9}},ExpressionUUID->"43306752-c1c8-435e-8bc6-\
1bc2c6549fbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Parameters", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nBits", "=", "4"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "p"}], "-", 
     RowBox[{"bits", " ", "in", " ", "the", " ", "system"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Adjacency", " ", "matrix", " ", "for", " ", "coupling", " ", "between", 
      " ", "p"}], "-", 
     RowBox[{"bits", " ", 
      RowBox[{"(", "J_ij", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "You", " ", "can", " ", "edit", " ", "the", " ", "adjacency", " ", 
      "matrix", " ", "and", " ", "play", " ", "with", " ", "the", " ", 
      RowBox[{"weights", ".", " ", "Make"}], " ", "sure", " ", "it", " ", 
      "is", " ", "symmetric"}], ",", " ", 
     RowBox[{
      RowBox[{"and", " ", "J_ij"}], " ", "=", " ", "J_ji"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Create", " ", "an", " ", "adjacency", " ", "graph", " ", "with", " ", 
     "labels"}], "*)"}], 
   RowBox[{
    RowBox[{"graph", "=", 
     RowBox[{"AdjacencyGraph", "[", 
      RowBox[{"J", ",", 
       RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Label", " ", "the", " ", "vertices", " ", "with", " ", "their", " ", 
         "numbers"}], "*)"}], 
       RowBox[{"EdgeLabels", "->", "EdgeWeight"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Label", " ", "the", " ", "edges", " ", "with", " ", "their", " ", 
     "weights"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "the", " ", "graph"}], "*)"}], "\n", 
   RowBox[{"Graph", "[", 
    RowBox[{"graph", ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", 
     RowBox[{"EdgeLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<EdgeWeight\>\"", ",", "Center"}], "]"}]}], ",", 
     RowBox[{"GraphStyle", "->", "\"\<SpringElectricalEmbedding\>\""}], ",", 
     " ", 
     RowBox[{"VertexSize", "->", "0.1"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Bias", " ", "vector", " ", 
     RowBox[{"(", "h_i", ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", "1"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Absolute", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Activation", " ", "function", " ", "for", " ", "bipolar", " ", "p"}], 
     "-", 
     RowBox[{"bits", " ", "using", " ", "tanh"}], "-", 
     RowBox[{"based", " ", "expression"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"activation", "[", 
     RowBox[{"input_", ",", "temp_"}], "]"}], ":=", 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"Tanh", "[", 
       RowBox[{"input", "/", "temp"}], "]"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "-", "1"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Initial", " ", "random", " ", "states", " ", "for", " ", "the", " ", 
      "4", " ", "p"}], "-", 
     RowBox[{"bits", " ", "using", " ", "bipolar", " ", "values"}], "+", 
     RowBox[{"1", " ", "or"}], "-", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "nBits"}], "]"}]}], "-", 
       "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IsingHamiltonian", "[", "state_List", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"J", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"state", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"state", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nBits"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nBits"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", 
         RowBox[{"state", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nBits"}], "}"}]}], "]"}]}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Perform", " ", "Gibbs", " ", 
     RowBox[{"sampling", ":", 
      RowBox[{"take", " ", "10000", " ", "samples"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samples", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Last", "@", 
       RowBox[{"Reap", "@", 
        RowBox[{"Do", "[", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Update", " ", "each", " ", "p"}], "-", 
           RowBox[{"bit", " ", "sequentially"}]}], "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "<=", "nBits"}], ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{"(*", 
              RowBox[{
              "Calculate", " ", "the", " ", "input", " ", "for", " ", "the", 
               " ", "activation", " ", "function"}], "*)"}], 
             RowBox[{
              RowBox[{"input", "=", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"J", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "j"}], "]"}], "]"}], "*", 
                   RowBox[{"states", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "nBits"}], "}"}]}], "]"}], "+", 
                RowBox[{"h", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "Update", " ", "the", " ", "state", " ", "of", " ", "the", 
                 " ", "k"}], "-", 
                RowBox[{"th", " ", "p"}], "-", "bit"}], "*)"}], 
              RowBox[{
               RowBox[{"states", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "=", 
               RowBox[{"activation", "[", 
                RowBox[{"input", ",", "T"}], "]"}]}], ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Store", " ", "the", " ", "current", " ", "state"}], 
            "*)"}], 
           RowBox[{"Sow", "[", "states", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"sweep", ",", "10000"}], "}"}]}], "]"}]}]}]}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Map", " ", "the", " ", "sampled", " ", "states", " ", "to", " ", "Ising",
      " ", "Hamiltonian", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hamiltonians", "=", 
     RowBox[{"IsingHamiltonian", "/@", "samples"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "histogram", " ", "of", " ", "the", " ", "Ising", " ", 
     "Hamiltonian", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Histogram", "[", 
    RowBox[{"hamiltonians", ",", 
     RowBox[{"{", "1", "}"}], ",", "\"\<Probability\>\"", ",", 
     RowBox[{"ChartLabels", "->", "None"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Remove", " ", "the", " ", "ChartLabels", " ", "to", " ", "avoid", " ", 
       "the", " ", "overlap"}], "*)"}], 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"{", 
       RowBox[{"FontSize", "->", "14"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Energy\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
    "]"}], "\n", "\n"}]}]], "Input",
 CellChangeTimes->{{3.932743635582206*^9, 3.932743635582206*^9}, 
   3.932747993341646*^9, {3.9327480302223525`*^9, 3.9327480308785915`*^9}, {
   3.932748371247179*^9, 3.9327483795063105`*^9}, 3.932748821430496*^9, {
   3.9327488856071434`*^9, 3.9327488860290155`*^9}, {3.9327492170372953`*^9, 
   3.932749226429864*^9}, {3.9327494018080225`*^9, 3.9327494038705797`*^9}, {
   3.932749790543478*^9, 3.9327498051675515`*^9}, {3.932749979997848*^9, 
   3.9327500172341003`*^9}, {3.932750065600635*^9, 3.932750114870872*^9}, 
   3.9327501521799774`*^9, {3.9327505628891225`*^9, 3.932750568501272*^9}, 
   3.932750776026496*^9, {3.932751444006153*^9, 3.932751505486019*^9}, {
   3.932751552189415*^9, 3.9327515838767724`*^9}, {3.932751616381693*^9, 
   3.93275162365458*^9}, {3.9327535253912315`*^9, 3.9327535721569614`*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"1de5abd5-8e24-4492-8b63-4a32af8f8d3c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 1, 3, 5, 6}, {{2}, {1}, {3}, {2}, {4}, {3}}}, Pattern}]}, {
      EdgeLabels -> {
         Placed["EdgeWeight", Center]}, GraphLayout -> {"Dimension" -> 2}, 
       GraphStyle -> "SpringElectricalEmbedding", VertexLabels -> {
         Placed["Name", Center]}, VertexSize -> {0.1}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
            "VertexID$2", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], 
         InsetBox["1", DynamicLocation["EdgeLabelID$1", Center], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
            "VertexID$3", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], 
         InsetBox["1", DynamicLocation["EdgeLabelID$2", Center], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
            "VertexID$4", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$3"], 
         InsetBox["1", DynamicLocation["EdgeLabelID$3", Center], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[DiskBox[{0., 6.123233995736766*^-16}, 0.05],
           "DynamicName",
           BoxID -> "VertexID$1"], 
          InsetBox["1", DynamicLocation["VertexID$1", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$1"], 
        TagBox[{
          TagBox[DiskBox[{1., 4.898587196589413*^-16}, 0.05],
           "DynamicName",
           BoxID -> "VertexID$2"], 
          InsetBox["2", DynamicLocation["VertexID$2", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$2"], 
        TagBox[{
          TagBox[DiskBox[{2., 2.4492935982947064*^-16}, 0.05],
           "DynamicName",
           BoxID -> "VertexID$3"], 
          InsetBox["3", DynamicLocation["VertexID$3", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$3"], 
        TagBox[{
          TagBox[DiskBox[{3., 0.}, 0.05],
           "DynamicName",
           BoxID -> "VertexID$4"], 
          InsetBox["4", DynamicLocation["VertexID$4", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$4"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9327537118034983`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"2de3fbb8-cf62-4648-bd9b-0584660ce4b9"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.637], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.637], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-3., 0}, {-2., 0.6838}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{37.71605643890115, 
           75.95490823462345}, {-75.05577512608902, 83.60937500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.6838]& ,
        TagBoxNote->"0.6838"],
       StyleBox["0.6838`", {FontSize -> 14}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.6838, {FontSize -> 14}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1., 0}, {0., 0.2791}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.19376003034574`, 151.43261182606804`}, {
           18.55264291431493, 83.60937500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.2791]& ,
        TagBoxNote->"0.2791"],
       StyleBox["0.2791`", {FontSize -> 14}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.2791, {FontSize -> 14}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {2., 0.0356}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{188.67146362179034`, 226.91031541751263`}, {
           74.87497993640135, 83.60937500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0356]& ,
        TagBoxNote->"0.0356"],
       StyleBox["0.0356`", {FontSize -> 14}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0356, {FontSize -> 14}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 0.0015}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{264.14916721323493`, 302.38801900895726`}, {
           82.76242015181468, 83.60937500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.0015]& ,
        TagBoxNote->"0.0015"],
       StyleBox["0.0015`", {FontSize -> 14}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0015, {FontSize -> 14}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Energy\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Probability\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-3.14, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontSize -> 14},
  PlotRange->{{-3., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9327537124603496`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"4b650f18-2a57-4de4-ba3b-2d75883dd223"]
}, Open  ]],

Cell["\<\
The following code calculates the Boltzmann distribution analytically. It \
calculates the energy of each possible spin configuration (2^N possibilities, \
where N is the number of p-bits in the system). It then applies P({m}) = 1/Z \
exp(-E{m}/T), where P(E{m}) is the probability of observing a particular \
energy corresponding to the spin state {m}, and Z is the partition function \
(a normalization constant). Note that multiple different spin configurations \
could have the same energy E; we call these degenerate states. We must \
account for this: two different states with the same energy E have their own \
probability P(E{m}).\
\>", "Text",
 CellChangeTimes->{{3.932749002277747*^9, 3.9327490636976757`*^9}, {
   3.9327495316070156`*^9, 3.9327496246966844`*^9}, {3.932751013926916*^9, 
   3.932751214116319*^9}, 
   3.9327689862816534`*^9},ExpressionUUID->"a935d153-d454-481d-8bde-\
e0c2fd7118dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Parameters", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nBits", "=", "4"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "p"}], "-", 
     RowBox[{"bits", " ", "in", " ", "the", " ", "system"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Adjacency", " ", "matrix", " ", "for", " ", "coupling", " ", "between", 
      " ", "p"}], "-", 
     RowBox[{"bits", " ", 
      RowBox[{"(", "J_ij", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "You", " ", "can", " ", "edit", " ", "the", " ", "adjacency", " ", 
      "matrix", " ", "and", " ", "play", " ", "with", " ", "the", " ", 
      RowBox[{"weights", ".", " ", "Make"}], " ", "sure", " ", "it", " ", 
      "is", " ", "symmetric"}], ",", " ", 
     RowBox[{
      RowBox[{"and", " ", "J_ij"}], " ", "=", " ", "J_ji"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Bias", " ", "vector", " ", 
     RowBox[{"(", "h_i", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"T", "=", "1"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Absolute", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "all", " ", "possible", " ", "states", " ", "for", " ",
       "nBits"}], "=", "4"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allStates", "=", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "nBits"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "energy", " ", "of", " ", "each", " ", 
     "possible", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"energies", "=", 
     RowBox[{"IsingHamiltonian", "/@", "allStates"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Identify", " ", "unique", " ", "energies", " ", "and", " ", "their", " ",
      "degeneracies"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniqueEnergiesWithDegeneracy", "=", 
     RowBox[{"Tally", "[", "energies", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "Boltzmann", " ", "weights", " ", "for", " ", "each", 
      " ", "unique", " ", "energy", " ", "level"}], ",", 
     RowBox[{"accounting", " ", "for", " ", "degeneracy"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"boltzmannWeightsWithDegeneracy", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/", "T"}], "]"}], " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", 
      "uniqueEnergiesWithDegeneracy"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Normalize", " ", "the", " ", "Boltzmann", " ", "weights"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Z", "=", 
     RowBox[{"Total", "[", "boltzmannWeightsWithDegeneracy", "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"normalizedBoltzmannHistogram", "=", 
     RowBox[{"boltzmannWeightsWithDegeneracy", "/", "Z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "the", " ", "Boltzmann", " ", "distribution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{"normalizedBoltzmannHistogram", ",", 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"uniqueEnergiesWithDegeneracy", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "Below"}], "]"}]}], 
     ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"{", 
       RowBox[{"FontSize", "->", "14"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Energy\>\"", ",", "\"\<Boltzmann Probability\>\""}], 
       "}"}]}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9327490878341446`*^9, 3.9327492023007402`*^9}, {
   3.932749233263528*^9, 3.9327492400940943`*^9}, {3.932749281292288*^9, 
   3.932749292138942*^9}, {3.932749633227844*^9, 3.9327496699276133`*^9}, {
   3.9327497286440496`*^9, 3.932749729097311*^9}, {3.932750498988221*^9, 
   3.932750532378771*^9}, {3.9327505880947576`*^9, 3.9327505895798016`*^9}, 
   3.9327506243525257`*^9, {3.9327506581818686`*^9, 3.9327506857776513`*^9}, 
   3.932750787808524*^9, {3.932750893237814*^9, 3.932750929161519*^9}, {
   3.93275098220776*^9, 3.932751001628927*^9}, {3.932751255159783*^9, 
   3.9327512612432537`*^9}, 3.932751439661108*^9, {3.9327535887867904`*^9, 
   3.932753636288803*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"71e4c570-8d75-4b10-bed4-27cfe94570e5"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.6833254493445461}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{95.86589743138379, 
            144.81725006640673`}, {-76.70491831164131, 83.609375}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6833254493445461]& ,
         TagBoxNote->"0.6833254493445461"],
        StyleBox[
        "0.6833254493445461`", {FontSize -> 14}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6833254493445461, {FontSize -> 14}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.27743412968948933`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{149.55734793008153`, 198.50870056510448`}, {
            18.223837048229782`, 83.609375}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.27743412968948933`]& ,
         TagBoxNote->"0.27743412968948933"],
        StyleBox[
        "0.27743412968948933`", {FontSize -> 14}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.27743412968948933`, {FontSize -> 14}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.037546626521030184`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{203.24879842877928`, 252.20015106380222`}, {
            74.3280723433372, 83.609375}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.037546626521030184`]& ,
         TagBoxNote->"0.037546626521030184"],
        StyleBox[
        "0.037546626521030184`", {FontSize -> 14}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.037546626521030184`, {FontSize -> 14}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.0016937944449343112`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{256.940248927477, 305.8916015625}, {
            82.71323497259138, 83.609375}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0016937944449343112`]& ,
         TagBoxNote->"0.0016937944449343112"],
        StyleBox[
        "0.0016937944449343112`", {FontSize -> 14}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0016937944449343112`, {FontSize -> 14}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {InsetBox[
     StyleBox[
      RowBox[{"-", "3.`"}],
      StripOnInput->False,
      FontSize->14], Offset[{0, -4}, {1., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RowBox[{"-", "1.`"}],
      StripOnInput->False,
      FontSize->14], Offset[{0, -4}, {2., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox["1.`",
      StripOnInput->False,
      FontSize->14], Offset[{0, -4}, {3., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox["3.`",
      StripOnInput->False,
      FontSize->14], Offset[{0, -4}, {4., 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
       StyleBox[
        {Thickness[Tiny], 
         StyleBox[InsetBox[
           TagBox["\<\"Energy\"\>",
            HoldForm], Offset[{10., 0.}, {4.451201747997087, 0.}], NCache[
           ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
           Automatic, {1, 0}],
          StripOnInput->False,
          FontSize->14]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{4.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Energy\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Boltzmann Probability\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontSize -> 14},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.932753712491605*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"e54de74b-2ca3-44c9-a9f3-c5b6f0f9a032"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949., 460.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b6a68f8a-c8e7-4ef6-98f7-d57469a4ff5f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 392, 6, 66, "Subtitle",ExpressionUUID->"564ff5f5-2e0e-44b8-9a55-5335e1abaf03"],
Cell[975, 30, 334, 7, 35, "Text",ExpressionUUID->"3b48b1a3-5c36-4c8b-9019-772944d49d5d"],
Cell[CellGroupData[{
Cell[1334, 41, 2402, 64, 162, "Input",ExpressionUUID->"db05ab8a-1249-4f51-988e-e556d5b625f7"],
Cell[3739, 107, 84436, 1496, 258, "Output",ExpressionUUID->"05a0f5e9-9c32-47c2-84da-d14be8cde476"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88224, 1609, 203, 3, 66, "Subtitle",ExpressionUUID->"8b962ab3-377f-47da-aea4-042f086ed2f5"],
Cell[88430, 1614, 277, 6, 35, "Text",ExpressionUUID->"d9ae09cb-64b9-4c4c-b573-8a3431d6d45e"],
Cell[CellGroupData[{
Cell[88732, 1624, 1894, 43, 181, "Input",ExpressionUUID->"039fc2e8-4a4d-479f-8f42-80e1bfee6fa6"],
Cell[90629, 1669, 1316, 29, 51, "Output",ExpressionUUID->"453e403e-7048-4a6b-98fc-5ab558d620a6"]
}, Open  ]],
Cell[91960, 1701, 395, 8, 58, "Text",ExpressionUUID->"ae36bb0f-be3f-42a4-92c5-f7038eb251ba"],
Cell[CellGroupData[{
Cell[92380, 1713, 10055, 265, 885, "Input",ExpressionUUID->"93d7ed2b-749a-4c4e-9dfb-c46cc771e524"],
Cell[102438, 1980, 6315, 168, 257, "Output",ExpressionUUID->"f18e62ad-f749-4d84-84fd-1711c3757bac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108802, 2154, 167, 3, 69, "Chapter",ExpressionUUID->"2e42a6cc-d4e1-4efc-aaee-529e9c40ad89"],
Cell[108972, 2159, 320, 7, 58, "Text",ExpressionUUID->"43306752-c1c8-435e-8bc6-1bc2c6549fbf"],
Cell[CellGroupData[{
Cell[109317, 2170, 10020, 254, 885, "Input",ExpressionUUID->"1de5abd5-8e24-4492-8b63-4a32af8f8d3c"],
Cell[119340, 2426, 3293, 79, 41, "Output",ExpressionUUID->"2de3fbb8-cf62-4648-bd9b-0584660ce4b9"],
Cell[122636, 2507, 4067, 114, 224, "Output",ExpressionUUID->"4b650f18-2a57-4de4-ba3b-2d75883dd223"]
}, Open  ]],
Cell[126718, 2624, 920, 15, 127, "Text",ExpressionUUID->"a935d153-d454-481d-8bde-e0c2fd7118dd"],
Cell[CellGroupData[{
Cell[127663, 2643, 5652, 144, 619, "Input",ExpressionUUID->"71e4c570-8d75-4b10-bed4-27cfe94570e5"],
Cell[133318, 2789, 6993, 188, 227, "Output",ExpressionUUID->"e54de74b-2ca3-44c9-a9f3-c5b6f0f9a032"]
}, Open  ]]
}, Open  ]]
}
]
*)

